Erstellen eines Projektes LIBRARY

1. Erstellen Sie einProjekt mit der Bezeichnung library. Binden Sie Foundation als CSS-Library ein:
	rails new library
	gem 'foundation-rails'		#unter Gemfile hinzufuegen
	bundle install			#in Konsole
	rails g foundation:install 	#in Konsole -> Y
	<%= javascript_include_tag "vendor/modernizer" %> #in application.html.erb
	*= require foundation #in application.css

2. Erstellen Sie die Resourceauthor und den Spalten firstname, lastname
	rails g scaffold author firstname:string lastname:string
	rake db:migrate

3. Erstellen der Resource book mit den Spalten: author_id und title, year, description der in einem 1:n Verhältnis zu author steht
	rails g scaffold book author_id:integer title:string year:date description:text author:references
	rake db:migrate

4. Die Resource author ist auch beim Routing der Resource book untergeordnet.
	routes.rb
		resources :authors do 
		resources :books
		end

	models/book.rb
		belongs_to :author

	models/author.rb
		has_many :books 

	views/books/_form.html.erb
		<%= form_for([@author, @book]) do .....

	books_controller.rb
		def new
    			@book = @author.books.new
  		end

		def index
			@books = @author.books
		end


	view/author/index.html.erb
		<td><%= link_to 'Books', author_books_path(author.id) %></td>

	def create
   		@book = @author.books.new(book_params)
		        format.html { redirect_to author_book_path(@author.id, @book.id)
	def update 
		        format.html { redirect_to author_book_path(@author.id, @book.id),
	def destroy 
		      	format.html { redirect_to author_books_url(@author.id),

	
5. Die Root-Url des Projektes zeigt die authors-index-Seite.
	root 'authors#index' #in root.rb
	

6. Legen Sie eine Seeds-Datei an, in der drei Autoren und fünf Bücher eingegeben sind.
	Author.create(firstname: "Peter", lastname: "hallo")
	Book.cfreate(...................)
	
	rake db:reset

7. Erstellen Sie mit einem Scaffold eine user Resource mit den Feldern: login, email, admin (boolean), birthdate (date), active (boolean). 
   Da das User-Objekt für einen Login verwendet werden soll und das bcrypt-ruby – gem eingebunden werden soll, 
   ist noch ein entsprechendes Passwort-Feld nötig.
	rails g scaffold user password:string login:string email:string admin:boolean birhtdate:date active:boolean
	rake db:migrate
	
	routes.rb
		get 'signup' => 'user#new'

1.	rails g controller sessions

2.	routes.rb
		resource :session

3.	...erb
		<%= link_to 'Sign In', new_session_path %>

4.	views/sessions/new.html.erb (ERSTELLEN)
		<h1>Sign In</h1>

		<%= form_tag(session_path) do %>
			<fieldset>
				
			<div class="row">
				
					<div class="medium-4 columns">
						<%= label_tag :email %>
					</div>
					<div class="medium-8 columns">
						<%= email_field_tag :email, params[:email], autofocus: true %> 
					</div>
				</div>

				<div class="row">
				
					<div class="medium-4 columns">
						<%= label_tag :password %>
					</div>
					<div class="medium-8 columns">
						<%= password_field_tag :password, nil %> 
					</div>
				</div>

				<div class="row">
				
					<div class="medium-4 columns">
				
					</div>
					<div class="medium-8 columns">
						<%= submit_tag 'Login' %>
					</div>
				</div>

			</fieldset>

		<% end %>


4.	sessions_controller.rb
			def new
			end

			def create
				user = User.find_by(email: params[:email])
				if user && user.authenticate(params[:password])
					session[:user_id] = user.id
					flash[:notice] = "Welcome back #{user.name.capitalize}!"
					redirect_to root_path
				else
					flash.now[:alert] = "Ungültige Anmeldedaten!"
					render :new
				end
			end

			def destroy
		  		session[:user_id] = nil
		  		redirect_to root_path, notice: "Ausgeloggt. Ice Ice BABY!"
		  	end

5.	application_controller
		def current_user
  			@current_user = User.find(session[:user_id]) if session[:user_id]
  		end

	  	helper_method :current_user

6.	_top_bar.html.erb
		  <div class="top-bar-right">
		    <ul class="menu">
		    <% if current_user %>
		      <%= current_user.name.capitalize %>
		        <%= link_to 'LogOut', session_path, method: :delete %>
		        <% else %>
		    <li><%= link_to 'Sign Up', signup_path %></li>
		    <li><%= link_to 'Sign In', new_session_path %></li>
		        <% end %>

7.	routes.rb
		get 'signup' => 'users#new'


       

8. Eine Resource lending regelt den Verleih von Büchern an User. Lending hat eine Referenz auf book, eine auf user, ein lending_date(date), return_date(date).
   Es muss ein User angemeldet sein, damit er ein Buch ausleihen kann, und das Buch darf nicht ausgeliehen sein. 
   Wenn ein User ein Buch ausleiht, dann wird in der Resource lending ein Datensatz angelegt, das lending_date wird auf das aktuelle Datum gesetzt. 
   Wird das Buch zurückgegeben, dann wird das return_date auf den aktuellen Datumswert gesetzt.

	rails g scaffold lending lending_date:date return_date:date book:references user:references
	rake db:migrate
	   

